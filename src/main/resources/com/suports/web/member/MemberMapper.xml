<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.suports.web.mapper.MemberMapper">

<resultMap id="memberResult" type="com.suports.web.domain.MemberDTO">
  <id property="memberIndex" column="MEMBER_INDEX" javaType="int"/>
  <result property="id" column="ID" javaType="String"/>
  <result property="password" column="PASSWORD" javaType="String"/>
  <result property="email" column="EMAIL" javaType="String"/>
  <result property="name" column="NAME" javaType="String"/>  
  <result property="birth" column="BIRTHDY" javaType="String"/>
  <result property="position" column="POSITION" javaType="String"/>
  <result property="characters" column="CHARACTERS" javaType="String"/>
  <result property="sports" column="SPORTS" javaType="String"/>
  <result property="address" column="ADDR" javaType="String"/>
  <result property="phone" column="PHONE" javaType="String"/>
  <result property="info" column="INFO" javaType="String"/>
  <result property="photo" column="PHOTO" javaType="String"/>
  <result property="state" column="STATE" javaType="String"/>
  <result property="disableDate" column="DISABLE_DATE" javaType="int"/>
  <result property="teamIndex" column="TEAM_INDEX" javaType="int"/>
  <result property="totalcount" column="TOTALCOUNT"/>
  <result property="rnum" column="rnum"/>
</resultMap>
	<select id="selectAMember" 
	resultMap="memberResult">
		SELECT *
		FROM MEMBER
		WHERE ID LIKE #{id}
		AND PASSWORD LIKE #{password}
	</select>
	<select id="selectAMemberDetail" 
	resultType="com.suports.web.domain.MemberDTO">
		SELECT
		MEMBER_INDEX memberIndex,
		ID id,
		EMAIL email,
		NAME name,
		BIRTHDY birth,
		POSITION position,
		CHARACTERS characters,
		SPORTS sports,
		ADDR address,
		PHONE phone,
		INFO info,
		PHOTO photo,
		STATE state,
		TEAM_INDEX teamIndex
		FROM MEMBER 
		<choose>
			<when test="name != null">
				WHERE NAME LIKE #{name}
			</when>
		<!-- 	<when test="email != null">
			<![CDATA[
				WHERE EMAIL LIKE #{email}
			]]>
			</when> -->
			<when test="phone != null">
				WHERE PHONE LIKE #{phone}
			</when>
			<otherwise>
				WHERE MEMBER_INDEX LIKE #{memberIndex}
			</otherwise>
		</choose>
	</select>
	<select id="selectListOfMembers"
		resultMap="memberResult">
		SELECT 
		@ROWNUM := @ROWNUM+1 as rnum,
		MEMBER_INDEX memberIndex,
		ID id,
		PASSWORD password,
		EMAIL email,
		NAME name,
		BIRTHDY birth,
		POSITION position,
		CHARACTERS characters,
		SPORTS sports,
		ADDR address,
		PHONE phone,
		INFO info,
		PHOTO photo,
		STATE state,
		DISABLE_DATE disableDate,
		TEAM_INDEX teamIndex
		FROM MEMBER, (SELECT @ROWNUM := 0) N
		<choose>
			<when test="totalCount == 0">
				WHERE TEAM_INDEX LIKE #{index}
			</when>
			<otherwise>
				WHERE TEAM_INDEX LIKE #{index}
				ORDER BY rnum DESC
				LIMIT #{startRow}, #{pageSize}
			</otherwise>
		</choose>
	</select>
	<select id="countMembers" resultType="int">
	SELECT COUNT(*) FROM MEMBER;
	</select>
	<select id="countATeamMembers" resultType="int">
	SELECT COUNT(*) FROM MEMBER
	WHERE TEAM_INDEX LIKE #{teamIndex};
	</select>
	<insert id="insertAMember"
		parameterType="com.suports.web.domain.MemberDTO" flushCache="true"
		statementType="PREPARED">		
		INSERT 
		INTO MEMBER 
		(
		ID,
		PASSWORD,
		EMAIL,
		NAME,
		BIRTHDY,
		POSITION,
		CHARACTERS,
		SPORTS,
		ADDR,
		PHONE,
		INFO
		)
		VALUES (
		#{id},
		#{password},
		#{email},
		#{name},
		#{birth},
		#{position},
		#{characters},
		#{sports},
		#{address},
		#{phone},
		#{info}
		)
	</insert>
	<insert id="insertAMemberPhoto"
		parameterType="com.suports.web.domain.ImageDTO" flushCache="true"
		statementType="PREPARED">
		INSERT 
		INTO IMAGE 
		(
		IMAGE_NAME,
		IMAGE_OWNER
		)
		VALUES 
		(
		#{imageName},
		#{imageOwner}
		)
	</insert>
	<update id="updateAMemberPhoto"
		parameterType="com.suports.web.domain.MemberDTO" flushCache="true"
		statementType="PREPARED" timeout="20">
		UPDATE 
		MEMBER SET
		PHOTO = #{photo}
		WHERE ID
		LIKE #{id}
	</update>
		<update id="updateAMemberTeamIndex"
		parameterType="com.suports.web.domain.MemberDTO" flushCache="true"
		statementType="PREPARED" timeout="20">
		<if test="memberIndex != 0">
		UPDATE 
		MEMBER M SET 
		TEAM_INDEX = (SELECT TEAM_INDEX FROM TEAM T WHERE M.MEMBER_INDEX LIKE T.TEAM_CAPTIN)
		WHERE MEMBER_INDEX
		LIKE #{memberIndex}
		</if>
		<if test="teamIndex != 0">
		UPDATE 
		MEMBER SET 
		TEAM_INDEX = null
		WHERE TEAM_INDEX
		LIKE #{teamIndex}
		</if>
	</update>
	<update id="updateAMember"
		parameterType="com.suports.web.domain.MemberDTO" flushCache="true"
		statementType="PREPARED" timeout="20">
		<if test="state != null and disableDate != 0 and teamIndex == 0">
		UPDATE 
		MEMBER SET
		STATE = 'resolved',
		DISABLE_DATE = NULL
		WHERE ID LIKE #{id}
		</if>
		<if test="state == null and name == null and characters == null and teamIndex == 0">
		UPDATE 
		MEMBER SET
		STATE = 'pending',
		DISABLE_DATE = NOW()
		WHERE ID LIKE #{id} 
		AND PASSWORD LIKE #{password}
		</if>
		<if test="state == null and name == null and memberIndex != 0 and teamIndex != 0">
		UPDATE 
		MEMBER SET
		TEAM_INDEX = #{teamIndex}
		WHERE MEMBER_INDEX LIKE #{memberIndex}
		</if>
		<if test="state == null and name != null and characters != null and disableDate == 0">
		UPDATE 
		MEMBER SET
		NAME = #{name},
		PASSWORD = #{password},
		BIRTHDY = #{birth},
		CHARACTERS = #{characters},
		INFO = #{info}
		WHERE ID
		LIKE #{id}
		</if>
	</update>
</mapper>